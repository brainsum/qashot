version: "2"

services:
  mariadb:
    image: wodby/mariadb:10.1-2.3.3
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
#    volumes:
#      - ./private_files/db_init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
#      - /path/to/mariadb/data/on/host:/var/lib/mysql # I want to manage volumes manually.

  php:
#    image: wodby/drupal-php:7.0-2.4.3
#    image: havelantmate/drupal_php:Backstop2.6.13-SlimerJS
#    image: havelantmate/drupal_php:Backstop3.0.26-SlimerJS
    security_opt:
      - seccomp:unconfined
    image: havelantmate/drupal_php:3.0.29
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: mariadb
      DB_USER: drupal
      DB_PASSWORD: drupal
      DB_NAME: drupal
      DB_DRIVER: mysql
#      PHP_XDEBUG: 1
#      PHP_XDEBUG_DEFAULT_ENABLE: 1
#      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0         # This is needed to respect remote.host setting bellow
#      PHP_XDEBUG_REMOTE_HOST: "10.254.254.254"  # You will also need to 'sudo ifconfig lo0 alias 10.254.254.254'
      # Legacy variables. ------------
      # @todo: When the node app is ready, switch back to the proper d4d image.
      DOCKER_ENVIRONMENT: docker4drupal
      PHP_SITE_NAME: qashot
      PHP_HOST_NAME: localhost:8000
      PHP_DOCROOT: web # Relative path inside the /var/www/html/ directory.
      PHP_WORKING_DIR: web
      # End of legacy variables. -----
    volumes:
      - ./:/var/www/html
# Options for macOS users (http://docs.docker4drupal.org/en/latest/macos)
#      - codebase:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync

#  nginx:
#    image: wodby/drupal-nginx:8-1.13-2.4.2
#    depends_on:
#      - php
#    environment:
#      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
#      NGINX_ERROR_LOG_LEVEL: debug
#      NGINX_BACKEND_HOST: php
#      NGINX_SERVER_ROOT: /var/www/html/web
#    volumes:
#      - ./:/var/www/html
## Options for macOS users (http://docs.docker4drupal.org/en/latest/macos)
##      - codebase:/var/www/html:cached # User-guided caching
##      - docker-sync:/var/www/html # Docker-sync
#    labels:
#      - 'traefik.backend=nginx'
#      - 'traefik.port=80'
#      - 'traefik.frontend.rule=Host:qashot.docker.localhost'

  # @todo: Switch to the new version, when ready.
  nginx:
    image: wodby/drupal-nginx:1.0.0
    depends_on:
      - php
    environment:
      NGINX_SERVER_NAME: localhost
      NGINX_UPSTREAM_NAME: php
      NGINX_DOCROOT: web # Relative path inside the /var/www/html/ directory.
      DRUPAL_VERSION: 8 # Allowed: 7, 8.
    volumes_from:
      - php
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:qashot.docker.localhost'

#  pma:
#    image: phpmyadmin/phpmyadmin
#    environment:
#      PMA_HOST: mariadb
#      PMA_USER: drupal
#      PMA_PASSWORD: drupal
#      PHP_UPLOAD_MAX_FILESIZE: 1G
#      PHP_MAX_INPUT_VARS: 1G
#    labels:
#      - 'traefik.backend=pma'
#      - 'traefik.port=80'
#      - 'traefik.frontend.rule=Host:pma.drupal.docker.localhost'

  mailhog:
    image: mailhog/mailhog
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.drupal.docker.localhost'

#  backstop_node:
##    image: node:8.3.0-slim
#    build:
#      context: ./backstop_node
#      dockerfile: backstop.dockerfile
#    working_dir: /app
#    labels:
#      - 'traefik.backend=node'
#      - 'traefik.port=3000'
##      - 'traefik.frontend.rule=Host:backstop_node.drupal.docker.localhost'
#    expose:
#      - "3000"
#    volumes:
#      - ./backstop_node:/app
#    command: sh -c 'yarn && yarn start'

#  portainer:
#    image: portainer/portainer
#    command: --no-auth
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    labels:
#      - 'traefik.backend=portainer'
#      - 'traefik.port=9000'
#      - 'traefik.frontend.rule=Host:portainer.drupal.docker.localhost'

  traefik:
    image: traefik
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '8000:80'
#      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  memcached:
#    image: wodby/memcached:1.4-2.0.0

#  rsyslog:
#    image: wodby/rsyslog

#  athenapdf:
#    image: arachnysdocker/athenapdf-service
#    environment:
#      WEAVER_AUTH_KEY: weaver-auth-key
#      WEAVER_ATHENA_CMD: "athenapdf -S"
#      WEAVER_MAX_WORKERS: 10
#      WEAVER_MAX_CONVERSION_QUEUE: 50
#      WEAVER_WORKER_TIMEOUT: 90
#      WEAVER_CONVERSION_FALLBACK: false

#  nodejs:
#    image: wodby/drupal-node:1.0-1.0.0
#    environment:
#       NODE_SERVICE_KEY: node-service-key
#    labels:
#      - 'traefik.backend=nodejs'
#      - 'traefik.port=8080'
#      - 'traefik.frontend.rule=Host:nodejs.drupal.docker.localhost'
#    volumes:
#      - ./path/to/your/single-page-app:/app
#    command: sh -c 'npm install && npm run start'

#  solr:
## wodby/drupal-solr:[DRUPAL_VERSION]-[SOLR_VERSION]-[STABILITY_TAG].
#    image: wodby/drupal-solr:8-6.6-2.2.0
##    image: wodby/drupal-solr:8-6.5-2.2.0
##    image: wodby/drupal-solr:8-6.4-2.2.0
##    image: wodby/drupal-solr:8-6.3-2.2.0
##    image: wodby/drupal-solr:8-5.5-2.2.0
##    image: wodby/drupal-solr:7-5.4-2.2.0
#    environment:
#      SOLR_HEAP: 1024m
#    labels:
#      - 'traefik.backend=solr'
#      - 'traefik.port=8983'
#      - 'traefik.frontend.rule=Host:solr.drupal.docker.localhost'

#  apache:
#    image: wodby/drupal-apache:2.4-1.0.2
#    depends_on:
#      - php
#    environment:
#      APACHE_LOG_LEVEL: debug
#      APACHE_BACKEND_HOST: php
#      APACHE_SERVER_ROOT: /var/www/html/web
#    volumes:
#      - codebase:/var/www/html
## Options for macOS users (http://docs.docker4drupal.org/en/latest/macos)
##      - codebase:/var/www/html:cached # User-guided caching
##      - docker-sync:/var/www/html # Docker-sync
#    labels:
#      - 'traefik.backend=apache'
#      - 'traefik.port=80'
#      - 'traefik.frontend.rule=Host:drupal.docker.localhost'

#  varnish:
#    image: wodby/drupal-varnish:4.1-2.1.2
#    depends_on:
#      - nginx
#    environment:
#      VARNISH_SECRET: secret
#      VARNISH_BACKEND_HOST: nginx
#      VARNISH_BACKEND_PORT: 80
#    labels:
#      - 'traefik.backend=varnish'
#      - 'traefik.port=6081'
#      - 'traefik.frontend.rule=Host:varnish.drupal.docker.localhost'

#  redis:
#    image: wodby/redis:3.2-2.1.2

#  adminer:
#    image: wodby/adminer:4.3-1.1.0
#    environment:
#      ADMINER_SALT: adminer-salt
#    labels:
#      - 'traefik.backend=adminer'
#      - 'traefik.port=9000'
#      - 'traefik.frontend.rule=Host:adminer.drupal.docker.localhost'

volumes:
  codebase:
## Docker-sync for macOS users
#  docker-sync:
#    external: true
